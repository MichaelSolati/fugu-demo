---
import fs from "graceful-fs";

import BaseLayout from "../layouts/BaseLayout.astro";
import CodeTab from "../components/CodeTab.tsx";
import pagesData from "../pagesData.ts";
import { normalizeSlug } from "../helpers.ts";

import AddToHomeScreenButton from "../components/examples/AddToHomeScreenButton.tsx";
const addToHomeScreenButtonCode: string = fs.readFileSync(
  "./src/components/examples/AddToHomeScreenButton.tsx",
  "utf-8"
);

const url = normalizeSlug(Astro.url.pathname);
const { title, description } = pagesData[url];
---

<BaseLayout description={description} title={title}>
  <h1>{title}</h1>

  <p>
    The ability to add a web application to a device's home screen is a feature
    The Web Almanac didn't look at in last 2021's Capabilities report. To
    calculate how many sites have this functionality, pages were tested to see
    if they had a listener for the <a
      target="_blank"
      href="https://developer.mozilla.org/docs/Web/API/Window/beforeinstallprompt_event"
      ><code>beforeinstallprompt</code></a
    > event.
  </p>
  <p>
    Note that the <code>beforeinstallprompt</code> event is a Chromium-only API
    and is currently <a
      target="_blank"
      href="https://wicg.github.io/manifest-incubations/index.html#installation-prompts"
      >incubating within the WICG</a
    >.
  </p>

  <p>
    The <code>beforeinstallprompt</code> event triggers right before a user is
    about to be prompted to "install" a web app. The usage of an event listener
    for the <code>beforeinstallprompt</code> event is not required for web apps
    to be added to a device's home screen, so it is safe to assume that the
    actual usage is much higher. However, this methodology will allow us to get
    an idea of how popular of a feature it is.
  </p>

  <p>
    The ability to add an application to the home screen is a crucial feature of
    PWAs. To use this feature, web applications must meet the <a
      target="_blank"
      href="https://web.dev/install-criteria/#criteria">following criteria</a
    >:
  </p>

  <ul>
    <li>The web app must not already be installed.</li>
    <li>
      The user must have spent at least 30 seconds viewing the page at any time.
    </li>
    <li>
      The user must have clicked or tapped at least once on the page at any
      time.
    </li>
    <li>The web app must be served over HTTPS.</li>
    <li>
      The web app must include a <a
        target="_blank"
        href="https://developer.mozilla.org/docs/Web/Manifest"
        >web app manifest</a
      > with:
      <ul>
        <li><code>short_name</code> or <code>name</code>.</li>
        <li>
          <code>icons</code> (must include a 192x192px and a 512x512px icon).
        </li>
        <li><code>start_url</code>.</li>
        <li>
          <code>display</code> (must be one of <code>fullscreen</code>, <code
            >standalone</code
          >, or <code>minimal-ui</code>).
        </li>
        <li>
          <code>prefer_related_applications</code> (must not be present, or <code
            >be false</code
          >).
        </li>
      </ul>
    </li>
    <li>
      The web app must register a service worker with a <code>fetch</code>
       handler.
    </li>
  </ul>

  <p>
    Installed applications can appear in Start menus, desktops, home screens,
    the Applications folder, when searching for applications on a device,
    content sharing sheets, and more.
  </p>

  <p>
    The ability to add to the home screen is only available on modern versions
    of Chrome, Edge, and Safari on iOS and iPadOS.
  </p>

  <h2>Add to Home Screem Example</h2>
  <CodeTab code={addToHomeScreenButtonCode} client:load>
    <AddToHomeScreenButton client:load />
  </CodeTab>

  <h2>Usage</h2>

  <p>
    As mentioned, the add to home screen capability was not measured last year.
    However, for posterity and detailed reporting, the <code
      >beforeinstallprompt</code
    > event was used on 8.56% of desktop pages and 7.71% of mobile pages, making
    it the third most used capability on desktop and mobile.
  </p>

  <p>
    By taking advantage of the <code>beforeinstallprompt</code> event,
    developers can provide a customized experience in how users install their
    web application. One example is YouTube TV, which invites users to install
    their application to access it more quickly and easily.
  </p>

  <figure id="fig-1">
    <picture>
      <source
        media="(prefers-reduced-motion: no-preference)"
        type="image/gif"
        srcset="/Add-to-Home-Screen.gif"
        width="640"
        height="360"
      />
      <img
        src="/Add-to-Home-Screen.webp"
        alt="Installing YouTube TV from an in app prompt, powered by the beforeinstallprompt event."
        aria-labelledby="fig-1-caption"
        aria-describedby="fig-1-description"
        width="640"
        height="360"
        loading="lazy"
      />
    </picture>
    <br />
    <details id="fig-1-description">
      <summary>Description of Figure 1</summary>
      <p>
        Installing YouTube TV from an in app prompt, powered by the <code
          >beforeinstallprompt</code
        > event.
      </p>
    </details>
    <br />
    <figcaption id="fig-1-caption">
      <a href="#fig-1">Figure 1.</a> Installing YouTube TV from an in app prompt,
      powered by the <code>beforeinstallprompt</code> event.
    </figcaption>
  </figure>
</BaseLayout>
../components/examples/AddToHomeScreenButton.tsx